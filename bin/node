#!/usr/bin/env bash
# bin/node — run npm tasks for the theme via a one-off Node container
set -euo pipefail

# shellcheck source=bin/_docker_helpers.sh
. "$(cd "$(dirname "$0")" && pwd)/_docker_helpers.sh"

# Host repo root (from .env) and theme dir inside the container
: "${DRUPAL_HOST_PATH:=/var/www/miraweb2024}"
: "${THEME_DIR:=/var/www/miraweb2024/docroot/themes/custom/sdmc}"

# One-off node image (node-sass often prefers Node 16)
: "${NODE_IMAGE:=node:16-alpine}"

# Map host UID/GID so node_modules aren’t root-owned
: "${HOST_UID:=$(id -u)}"
: "${HOST_GID:=$(id -g)}"

# Commands
cmd="${1:-}"; shift || true

# Verify basics
if [[ ! -d "$DRUPAL_HOST_PATH" ]]; then
  echo "ERROR: DRUPAL_HOST_PATH not found on host: $DRUPAL_HOST_PATH" >&2
  exit 1
fi

# Compose the SASS_PATH so @import resolves libraries & node_modules nicely
SASS_PATH="/work/docroot/libraries:/work/docroot/themes/custom/sdmc/node_modules:/work/node_modules"

# Build the snippet to run
case "$cmd" in
  ""|"menu")
    cat <<EOF
Usage: ${0##*/} [install|rebuild|build|all|run <script>|-- <npm args...>]

Examples:
  ${0##*/} install
  ${0##*/} rebuild
  ${0##*/} build
  ${0##*/} all
  ${0##*/} run dev
  ${0##*/} -- audit fix
EOF
    exit 0
    ;;
  install) snippet='[ -f package-lock.json ] && npm ci || npm install' ;;
  rebuild) snippet='(grep -q "\"node-sass\"" package.json >/dev/null 2>&1 && npm rebuild node-sass || true)' ;;
  build)   snippet='npm run build' ;;
  all)     snippet='([ -f package-lock.json ] && npm ci || npm install) && (grep -q "\"node-sass\"" package.json >/dev/null 2>&1 && npm rebuild node-sass || true) && npm run build' ;;
  run)
    [[ $# -ge 1 ]] || { echo "Usage: ${0##*/} run <script>"; exit 1; }
    script="$1"; shift
    snippet="npm run $(printf %q "$script") $*"
    ;;
  --) # raw passthrough to npm
    snippet="npm $*"
    ;;
  *)
    # raw passthrough if user typed e.g. “npm outdated”
    snippet="npm $cmd $*"
    ;;
esac

# Run inside the one-off Node container
# - Mount the host repo at /work
# - Work inside THEME_DIR (same path inside container)
exec docker run --rm -t \
  -u "${HOST_UID}:${HOST_GID}" \
  -v "${DRUPAL_HOST_PATH}:/work:Z" \
  -w "${THEME_DIR}" \
  -e SASS_PATH="${SASS_PATH}" \
  "$NODE_IMAGE" \
  sh -lc '
    set -e
    echo "==> Working dir: $PWD"
    echo "==> Running: '"$snippet"'"
    '"$snippet"'
  '

